#!/bin/bash
set -e -o pipefail

action=$1
namespace=$2
service=$3

if [[ ${namespace} != *formbuilder-services* ]]; then
  echo '*************************************************'
  echo 'Namespace must be one of:'
  echo
  echo '- formbuilder-services-test-dev'
  echo
  echo '- formbuilder-services-test-production'
  echo
  echo '- formbuilder-services-live-dev'
  echo
  echo '- formbuilder-services-live-production'
  echo '*************************************************'
  exit 1
fi

if [[ ! ${action} =~ (enable|disable) ]]; then
  echo '*************************************************'
  echo 'Action must be either:'
  echo
  echo '- enable'
  echo
  echo '- disable'
  echo '*************************************************'
  echo
  exit 1
fi

# get just matches for provided service name
ingresslist=$(kubectl get ingress -n "${namespace}" | grep -o -w "${service}")

if [[ ! ${service} == "${ingresslist}" ]]; then
  echo '*************************************************'
  echo 'Service name must exact match an ingress name in the target namespace'
  echo '*************************************************'
  echo
  exit 1
fi

if [[ ${namespace} == 'formbuilder-services-test-dev' ]]; then
  hostname_postfix='dev.test.form.service.justice.gov.uk'
elif [[ ${namespace} == 'formbuilder-services-test-production' ]]; then
  hostname_postfix='test.form.service.justice.gov.uk'
elif [[ ${namespace} == 'formbuilder-services-live-dev' ]]; then
  hostname_postfix='dev.form.service.justice.gov.uk'
elif [[ ${namespace} == 'formbuilder-services-live-production' ]]; then
  hostname_postfix='form.service.justice.gov.uk'
else
  echo '*************************************************'
  echo 'Invalid namespace provided. Check the README'
  echo '*************************************************'
  echo
  exit 1
fi

echo '*************************************************'
echo "Action: ${action}"
echo
echo "Namespace: ${namespace}"
echo
echo "Hostname postfix: ${hostname_postfix}"
echo '*************************************************'
echo

ingresses=$(kubectl get ingress "${service}" -n "${namespace}")

for line in ${ingresses}; do
  read -ra parts <<< "${line}"

  for part in "${parts[@]}"; do
    if [[ $part == *-ingress* ]]; then
      echo '*************************************************'
      ingress="${part}"
      echo "Ingress is ${ingress}"
      echo

      service_slug="${ingress/-ingress/}"
      echo "Service slug is ${service_slug}"
      echo

      hostname="${service_slug}.${hostname_postfix}"
      echo "Hostname is ${hostname}"
      echo

      if [[ ${action} == 'enable' ]]; then
        service_name=fb-maintenance-page-svc
      else
        service_name="${service_slug}"
      fi
      echo "Service name is ${service_name}"
      echo

      if [[ ${action} == 'enable' ]]; then
        container_port=80
      else
        container_port=3000
      fi
      echo "Container port is ${container_port}"
      echo

      namespace_directory="./tmp/${namespace}"
      if [ ! -d "${namespace_directory}" ]; then
        mkdir -p "${namespace_directory}"
      fi

      filepath="${namespace_directory}/${ingress}.yaml"
      echo "Copying template to ${filepath}"
      cp "./templates/ingress.yaml" "${filepath}"
      echo

      sed -i '' "s/replace_ingress_name/${ingress}/g" "${filepath}"
      sed -i '' "s/replace_service_slug/${service_slug}/g" "${filepath}"
      sed -i '' "s/replace_namespace/${namespace}/g" "${filepath}"
      sed -i '' "s/replace_hostname/${hostname}/g" "${filepath}"
      sed -i '' "s/replace_service_name/${service_name}/g" "${filepath}"
      sed -i '' "s/replace_container_port/${container_port}/g" "${filepath}"

      echo "Applying new ingress ${filepath} in ${namespace}"
      kubectl apply -f "${filepath}" -n "${namespace}"

      echo '*************************************************'
      echo
    fi
  done
done

